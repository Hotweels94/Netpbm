package Netpbm

import (
	"os"
	"testing"
)

const imagePPMWidth = 15
const imagePPMHeight = 15
const imagePPMMax = 255

var imagePPMData = []Pixel{
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 0}, {0, 0, 14}, {255, 255, 14}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 192, 14}, {255, 192, 14}, {0, 0, 0},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 192, 14}, {0, 0, 0}, {0, 0, 0},
	{0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255},
	{0, 0, 0}, {255, 255, 14}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255},
	{0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
}

var imagePPMInvert = []Pixel{
	{0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0},
	{0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0},
	{0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0},
	{0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {0, 0, 255}, {255, 255, 241}, {0, 0, 241}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {0, 63, 241}, {0, 63, 241}, {255, 255, 255},
	{0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {0, 63, 241}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0},
	{255, 255, 255}, {0, 0, 241}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0},
	{255, 255, 255}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0},
	{255, 255, 255}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {255, 255, 255}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0},
	{255, 255, 255}, {0, 0, 241}, {0, 0, 241}, {255, 255, 255}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {255, 255, 255}, {0, 0, 241}, {0, 0, 241}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0},
	{0, 0, 0}, {255, 255, 255}, {0, 0, 241}, {0, 0, 241}, {255, 255, 255}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {255, 255, 255}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0},
	{0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {0, 0, 241}, {0, 0, 241}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0},
	{0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {0, 0, 241}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0},
	{0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0},
}

var imagePPMFlip = []Pixel{
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 14}, {0, 0, 14}, {255, 255, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 0, 0}, {255, 192, 14}, {255, 192, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 0, 0}, {0, 0, 0}, {255, 192, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {255, 255, 14}, {0, 0, 0},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0},
	{255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0},
	{255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0},
	{255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
}

var imagePPMFlop = []Pixel{
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255},
	{0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255},
	{0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255},
	{0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 0, 0}, {255, 255, 14}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 192, 14}, {0, 0, 0}, {0, 0, 0},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 192, 14}, {255, 192, 14}, {0, 0, 0},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 0}, {0, 0, 14}, {255, 255, 14}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
}

var imagePPMRotate90 = []Pixel{
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 0, 0}, {255, 255, 14}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255},
	{0, 0, 0}, {255, 255, 14}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255},
	{0, 0, 0}, {255, 255, 14}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0},
	{0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 14}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0},
	{0, 0, 0}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 0}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0},
	{255, 255, 255}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0},
	{255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {255, 255, 14}, {0, 0, 0}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {255, 192, 14}, {255, 192, 14}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {255, 192, 14}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
}

var imagePPMDrawLine = []Pixel{
	{0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 0, 0}, {255, 0, 0}, {0, 255, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0},
}

var imagePPMDrawRectangle = []Pixel{
	{0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0},
	{0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
}

var imagePPMDrawFilledRectangle = []Pixel{
	{0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0},
	{0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0},
	{0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0},
	{0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0},
	{0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0},
	{0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0},
	{0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0},
	{0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0},
	{0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0},
	{0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0},
	{0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {255, 0, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0},
	{0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0},
	{0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0},
	{0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0},
	{0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0},
}

var imagePPMDrawCircle = []Pixel{
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
}

var imagePPMDrawFilledCircle = []Pixel{
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
}

var imagePPMDrawTriangle = []Pixel{
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
}

var imagePPMDrawFilledTriangle = []Pixel{
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
}

var imagePPMDrawPolygon = []Pixel{
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
}

var imagePPMDrawFilledPolygon = []Pixel{
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
	{255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255}, {255, 255, 255},
}

func TestReadPPM(t *testing.T) {
	ppm, err := ReadPPM("./testImages/ppm/testP3.ppm")
	if err != nil {
		t.Error(err)
	}
	if ppm.magicNumber != "P3" {
		t.Error("Magic number not read correctly")
	}
	if ppm.width != imagePPMWidth {
		t.Error("Width not read correctly")
	}
	if ppm.height != imagePPMHeight {
		t.Error("Height not read correctly")
	}
	if ppm.max != imagePPMMax {
		t.Error("Max value not read correctly")
	}
	for i := 0; i < imageWidth*imageHeight; i++ {
		x := i % imageWidth
		y := i / imageWidth
		if ppm.data[y][x] != imagePPMData[i] {
			t.Errorf("Pixel at (%d, %d) not read correctly", x, y)
		}
	}
	ppm, err = ReadPPM("./testImages/ppm/testP6.ppm")
	if err != nil {
		t.Error(err)
	}
	if ppm.magicNumber != "P6" {
		t.Error("Magic number not read correctly")
	}
	if ppm.width != imagePPMWidth {
		t.Error("Width not read correctly")
	}
	if ppm.height != imagePPMHeight {
		t.Error("Height not read correctly")
	}
	if ppm.max != imagePPMMax {
		t.Error("Max value not read correctly")
	}
	for i := 0; i < imageWidth*imageHeight; i++ {
		x := i % imageWidth
		y := i / imageWidth
		if ppm.data[y][x] != imagePPMData[i] {
			t.Errorf("Pixel at (%d, %d) not read correctly", x, y)
		}
	}
}

func TestPPMSize(t *testing.T) {
	ppm, err := ReadPPM("./testImages/ppm/testP3.ppm")
	if err != nil {
		t.Error(err)
	}
	width, height := ppm.Size()
	if width != imagePPMWidth || height != imagePPMHeight {
		t.Error("Size not calculated correctly")
	}
}

func TestPPMAt(t *testing.T) {
	ppm, err := ReadPPM("./testImages/ppm/testP3.ppm")
	if err != nil {
		t.Error(err)
	}
	for i := 0; i < imageWidth*imageHeight; i++ {
		x := i % imageWidth
		y := i / imageWidth
		if ppm.At(x, y) != imagePPMData[i] {
			t.Errorf("Pixel at (%d, %d) not read correctly", x, y)
		}
	}
}

func TestPPMSet(t *testing.T) {
	ppm, err := ReadPPM("./testImages/ppm/testP3.ppm")
	if err != nil {
		t.Error(err)
	}
	testPix := Pixel{12, 34, 55}
	ppm.Set(0, 0, testPix)
	if ppm.At(0, 0) != testPix {
		t.Error("Pixel not set correctly")
	}
}

func TestPPMSave(t *testing.T) {
	ppm, err := ReadPPM("./testImages/ppm/testP3.ppm")
	if err != nil {
		t.Error(err)
	}
	ppm.SetMagicNumber("P3")
	err = ppm.Save("./testImages/ppm/testP3a.ppm")
	if err != nil {
		t.Error(err)
	}
	ppm, err = ReadPPM("./testImages/ppm/testP3a.ppm")
	if err != nil {
		t.Error(err)
	}
	if ppm.magicNumber != "P3" {
		t.Error("Magic number not read correctly")
	}
	if ppm.width != imagePPMWidth {
		t.Error("Width not read correctly")
	}
	if ppm.height != imagePPMHeight {
		t.Error("Height not read correctly")
	}
	if ppm.max != imagePPMMax {
		t.Error("Max value not read correctly")
	}
	for i := 0; i < imageWidth*imageHeight; i++ {
		x := i % imageWidth
		y := i / imageWidth
		if ppm.data[y][x] != imagePPMData[i] {
			t.Errorf("Pixel at (%d, %d) not read correctly", x, y)
		}
	}
	ppm, err = ReadPPM("./testImages/ppm/testP6.ppm")
	if err != nil {
		t.Error(err)
	}
	ppm.SetMagicNumber("P6")
	err = ppm.Save("./testImages/ppm/testP6a.ppm")
	if err != nil {
		t.Error(err)
	}
	ppm, err = ReadPPM("./testImages/ppm/testP6a.ppm")
	if err != nil {
		t.Error(err)
	}
	if ppm.magicNumber != "P6" {
		t.Error("Magic number not read correctly")
	}
	if ppm.width != imagePPMWidth {
		t.Error("Width not read correctly")
	}
	if ppm.height != imagePPMHeight {
		t.Error("Height not read correctly")
	}
	if ppm.max != imagePPMMax {
		t.Error("Max value not read correctly")
	}
	for i := 0; i < imageWidth*imageHeight; i++ {
		x := i % imageWidth
		y := i / imageWidth
		if ppm.data[y][x] != imagePPMData[i] {
			t.Errorf("Pixel at (%d, %d) not read correctly", x, y)
		}
	}
	// remove the test files
	err = os.Remove("./testImages/ppm/testP3a.ppm")
	if err != nil {
		t.Error(err)
	}
	err = os.Remove("./testImages/ppm/testP6a.ppm")
	if err != nil {
		t.Error(err)
	}
}

func TestPPMInvert(t *testing.T) {
	ppm, err := ReadPPM("./testImages/ppm/testP3.ppm")
	if err != nil {
		t.Error(err)
	}
	ppm.Invert()
	for i := 0; i < imageWidth*imageHeight; i++ {
		x := i % imageWidth
		y := i / imageWidth
		if ppm.data[y][x] != imagePPMInvert[i] {
			t.Errorf("Pixel at (%d, %d) not inverted correctly", x, y)
		}
	}

}

func TestPPMFlip(t *testing.T) {
	ppm, err := ReadPPM("./testImages/ppm/testP3.ppm")
	if err != nil {
		t.Error(err)
	}
	ppm.Flip()
	for i := 0; i < imageWidth*imageHeight; i++ {
		x := i % imageWidth
		y := i / imageWidth
		if ppm.data[y][x] != imagePPMFlip[i] {
			t.Errorf("Pixel at (%d, %d) not flipped correctly", x, y)
		}
	}
}

func TestPPMFlop(t *testing.T) {
	ppm, err := ReadPPM("./testImages/ppm/testP3.ppm")
	if err != nil {
		t.Error(err)
	}
	ppm.Flop()
	for i := 0; i < imageWidth*imageHeight; i++ {
		x := i % imageWidth
		y := i / imageWidth
		if ppm.data[y][x] != imagePPMFlop[i] {
			t.Errorf("Pixel at (%d, %d) not flopped correctly", x, y)
		}
	}
}

func TestPPMSetMagicNumber(t *testing.T) {
	ppm, err := ReadPPM("./testImages/ppm/testP3.ppm")
	if err != nil {
		t.Error(err)
	}
	ppm.SetMagicNumber("P6")
	if ppm.magicNumber != "P6" {
		t.Error("Magic number not set correctly")
	}
	ppm.SetMagicNumber("P3")
	if ppm.magicNumber != "P3" {
		t.Error("Magic number not set correctly")
	}
}

func TestPPMSetMaxValue(t *testing.T) {
	ppm, err := ReadPPM("./testImages/ppm/testP3.ppm")
	if err != nil {
		t.Error(err)
	}
	oldMax := ppm.max
	ppm.SetMaxValue(128)
	if ppm.max != 128 {
		t.Error("Max value not set correctly")
	}
	for i := 0; i < imageWidth*imageHeight; i++ {
		x := i % imageWidth
		y := i / imageWidth
		if ppm.data[y][x].R != uint8(float64(imagePPMData[i].R)*float64(ppm.max)/float64(oldMax)) {
			t.Errorf("Red value at (%d, %d) not converted correctly wanted %d got %d", x, y, uint8(float64(imagePPMData[i].R)*float64(ppm.max)/float64(oldMax)), ppm.data[y][x].R)
		}
		if ppm.data[y][x].G != uint8(float64(imagePPMData[i].G)*float64(ppm.max)/float64(oldMax)) {
			t.Errorf("Green value at (%d, %d) not converted correctly wanted %d got %d", x, y, uint8(float64(imagePPMData[i].G)*float64(ppm.max)/float64(oldMax)), ppm.data[y][x].G)
		}
		if ppm.data[y][x].B != uint8(float64(imagePPMData[i].B)*float64(ppm.max)/float64(oldMax)) {
			t.Errorf("Blue value at (%d, %d) not converted correctly wanted %d got %d", x, y, uint8(float64(imagePPMData[i].B)*float64(ppm.max)/float64(oldMax)), ppm.data[y][x].B)
		}
	}
}

func TestPPMRotate90CW(t *testing.T) {
	ppm, err := ReadPPM("./testImages/ppm/testP3.ppm")
	if err != nil {
		t.Error(err)
	}
	ppm.Rotate90CW()
	if ppm.width != imagePPMHeight {
		t.Error("Width not rotated correctly")
	}
	if ppm.height != imagePPMWidth {
		t.Error("Height not rotated correctly")
	}
	for i := 0; i < imageWidth*imageHeight; i++ {
		x := i % imageWidth
		y := i / imageWidth
		if ppm.data[y][x] != imagePPMRotate90[i] {
			t.Errorf("Pixel at (%d, %d) not rotated correctly wanted %v got %v", x, y, imagePPMRotate90[i], ppm.data[x][y])
		}
	}
}

func TestPPMToPGM(t *testing.T) {
	ppm, err := ReadPPM("./testImages/ppm/testP3.ppm")
	if err != nil {
		t.Error(err)
	}
	pgm := ppm.ToPGM()
	if pgm.magicNumber != "P2" {
		t.Error("Magic number not set correctly")
	}
	if pgm.width != imagePPMWidth {
		t.Error("Width not set correctly")
	}
	if pgm.height != imagePPMHeight {
		t.Error("Height not set correctly")
	}
	if pgm.max != imagePPMMax {
		t.Error("Max value not set correctly")
	}
	for i := 0; i < imageWidth*imageHeight; i++ {
		x := i % imageWidth
		y := i / imageWidth
		if pgm.data[y][x] != uint8((int(imagePPMData[i].R)+int(imagePPMData[i].G)+int(imagePPMData[i].B))/3) {
			t.Errorf("Pixel at (%d, %d) not converted correctly wanted %d got %d", x, y, uint8((int(imagePPMData[i].R)+int(imagePPMData[i].G)+int(imagePPMData[i].B))/3), pgm.data[y][x])
		}
	}
}

func TestPPMToPBM(t *testing.T) {
	ppm, err := ReadPPM("./testImages/ppm/testP3.ppm")
	if err != nil {
		t.Error(err)
	}
	pbm := ppm.ToPBM()
	if pbm.magicNumber != "P1" {
		t.Error("Magic number not set correctly")
	}
	if pbm.width != imagePPMWidth {
		t.Error("Width not set correctly")
	}
	if pbm.height != imagePPMHeight {
		t.Error("Height not set correctly")
	}
	for i := 0; i < imageWidth*imageHeight; i++ {
		x := i % imageWidth
		y := i / imageWidth
		if pbm.data[y][x] != (uint8((int(imagePPMData[i].R)+int(imagePPMData[i].G)+int(imagePPMData[i].B))/3) < uint8(ppm.max/2)) {
			t.Errorf("Pixel at (%d, %d) not converted correctly wanted %t got %t", x, y, uint8((int(imagePPMData[i].R)+int(imagePPMData[i].G)+int(imagePPMData[i].B))/3) > uint8(ppm.max/2), pbm.data[y][x])
		}
	}
}

func TestPPMDrawLine(t *testing.T) {
	ppm, err := ReadPPM("./testImages/ppm/blank.ppm")
	if err != nil {
		t.Error(err)
	}
	ppm.DrawLine(Point{X: 3, Y: 5}, Point{X: 11, Y: 5}, Pixel{R: 255, G: 0, B: 0})
	ppm.DrawLine(Point{X: 0, Y: 0}, Point{X: 20, Y: 20}, Pixel{R: 0, G: 255, B: 0})

	for i := 0; i < imageWidth*imageHeight; i++ {
		x := i % imageWidth
		y := i / imageWidth
		if ppm.data[y][x] != imagePPMDrawLine[i] {
			t.Errorf("Pixel at (%d, %d) not drawn correctly wanted %v got %v", x, y, imagePPMDrawLine[i], ppm.data[y][x])
		}
	}
}

func TestPPMDrawRectangle(t *testing.T) {
	ppm, err := ReadPPM("./testImages/ppm/blank.ppm")
	if err != nil {
		t.Error(err)
	}
	ppm.DrawRectangle(Point{X: 3, Y: 5}, 7, 5, Pixel{R: 255, G: 0, B: 0})
	ppm.DrawRectangle(Point{X: 0, Y: 0}, 20, 20, Pixel{R: 0, G: 255, B: 0})

	for i := 0; i < imageWidth*imageHeight; i++ {
		x := i % imageWidth
		y := i / imageWidth
		if ppm.data[y][x] != imagePPMDrawRectangle[i] {
			t.Errorf("Pixel at (%d, %d) not drawn correctly wanted %v got %v", x, y, imagePPMDrawRectangle[i], ppm.data[y][x])
		}
	}
}

func TestPPMDrawFilledRectangle(t *testing.T) {
	ppm, err := ReadPPM("./testImages/ppm/blank.ppm")
	if err != nil {
		t.Error(err)
	}
	ppm.DrawFilledRectangle(Point{X: 0, Y: 0}, 20, 20, Pixel{R: 0, G: 255, B: 0})
	ppm.DrawFilledRectangle(Point{X: 3, Y: 5}, 7, 5, Pixel{R: 255, G: 0, B: 0})

	for i := 0; i < imageWidth*imageHeight; i++ {
		x := i % imageWidth
		y := i / imageWidth
		if ppm.data[y][x] != imagePPMDrawFilledRectangle[i] {
			t.Errorf("Pixel at (%d, %d) not drawn correctly wanted %v got %v", x, y, imagePPMDrawFilledRectangle[i], ppm.data[y][x])
		}
	}
}

func TestPPMDrawCircle(t *testing.T) {
	ppm, err := ReadPPM("./testImages/ppm/blank.ppm")
	if err != nil {
		t.Error(err)
	}
	ppm.DrawCircle(Point{X: 7, Y: 7}, 5, Pixel{R: 0, G: 255, B: 0})

	for i := 0; i < imageWidth*imageHeight; i++ {
		x := i % imageWidth
		y := i / imageWidth
		if ppm.data[y][x] != imagePPMDrawCircle[i] {
			t.Errorf("Pixel at (%d, %d) not drawn correctly wanted %v got %v", x, y, imagePPMDrawCircle[i], ppm.data[y][x])
		}
	}
}

func TestPPMDrawFilledCircle(t *testing.T) {
	ppm, err := ReadPPM("./testImages/ppm/blank.ppm")
	if err != nil {
		t.Error(err)
	}
	ppm.DrawFilledCircle(Point{X: 7, Y: 7}, 5, Pixel{R: 0, G: 255, B: 0})

	for i := 0; i < imageWidth*imageHeight; i++ {
		x := i % imageWidth
		y := i / imageWidth
		if ppm.data[y][x] != imagePPMDrawFilledCircle[i] {
			t.Errorf("Pixel at (%d, %d) not drawn correctly wanted %v got %v", x, y, imagePPMDrawFilledCircle[i], ppm.data[y][x])
		}
	}
}

func TestPPMDrawTriangle(t *testing.T) {
	ppm, err := ReadPPM("./testImages/ppm/blank.ppm")
	if err != nil {
		t.Error(err)
	}
	ppm.DrawTriangle(Point{X: 1, Y: 1}, Point{X: 8, Y: 1}, Point{X: 8, Y: 8}, Pixel{R: 0, G: 255, B: 0})

	for i := 0; i < imageWidth*imageHeight; i++ {
		x := i % imageWidth
		y := i / imageWidth
		if ppm.data[y][x] != imagePPMDrawTriangle[i] {
			t.Errorf("Pixel at (%d, %d) not drawn correctly wanted %v got %v", x, y, imagePPMDrawTriangle[i], ppm.data[y][x])
		}
	}
}

func TestPPMDrawFilledTriangle(t *testing.T) {
	ppm, err := ReadPPM("./testImages/ppm/blank.ppm")
	if err != nil {
		t.Error(err)
	}
	ppm.DrawFilledTriangle(Point{X: 1, Y: 1}, Point{X: 8, Y: 1}, Point{X: 8, Y: 8}, Pixel{R: 0, G: 255, B: 0})

	for i := 0; i < imageWidth*imageHeight; i++ {
		x := i % imageWidth
		y := i / imageWidth
		if ppm.data[y][x] != imagePPMDrawFilledTriangle[i] {
			t.Errorf("Pixel at (%d, %d) not drawn correctly wanted %v got %v", x, y, imagePPMDrawFilledTriangle[i], ppm.data[y][x])
		}
	}
}

func TestPPMDrawPolygon(t *testing.T) {
	ppm, err := ReadPPM("./testImages/ppm/blank.ppm")
	if err != nil {
		t.Error(err)
	}
	ppm.DrawPolygon([]Point{
		{X: 3, Y: 1},
		{X: 0, Y: 10},
		{X: 10, Y: 10},
		{X: 10, Y: 1},
	}, Pixel{R: 0, G: 255, B: 0})

	for i := 0; i < imageWidth*imageHeight; i++ {
		x := i % imageWidth
		y := i / imageWidth
		if ppm.data[y][x] != imagePPMDrawPolygon[i] {
			t.Errorf("Pixel at (%d, %d) not drawn correctly wanted %v got %v", x, y, imagePPMDrawPolygon[i], ppm.data[y][x])
		}
	}
}

func TestPPMDrawFilledPolygon(t *testing.T) {
	ppm, err := ReadPPM("./testImages/ppm/blank.ppm")
	if err != nil {
		t.Error(err)
	}
	ppm.DrawFilledPolygon([]Point{
		{X: 3, Y: 1},
		{X: 0, Y: 10},
		{X: 10, Y: 10},
		{X: 10, Y: 1},
	}, Pixel{R: 0, G: 255, B: 0})

	for i := 0; i < imageWidth*imageHeight; i++ {
		x := i % imageWidth
		y := i / imageWidth
		if ppm.data[y][x] != imagePPMDrawFilledPolygon[i] {
			t.Errorf("Pixel at (%d, %d) not drawn correctly wanted %v got %v", x, y, imagePPMDrawFilledPolygon[i], ppm.data[y][x])
		}
	}
}
